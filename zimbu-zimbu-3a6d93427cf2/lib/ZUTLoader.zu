#
# The Zimbu compiler written in Zimbu
#
# ZUT module loader
#
# Copyright 2009 Bram Moolenaar  All Rights Reserved.
# Licensed under the Apache License, Version 2.0.  See the LICENSE file or
# obtain a copy at: http://www.apache.org/licenses/LICENSE-2.0
#

IMPORT ../Builtin.zu
IMPORT ../DeclStore.zu
IMPORT ../Declaration.zu
IMPORT ../SContext.zu

MODULE ZUTLoader @public
  Declaration moduleDecl

  # Prepare for using the builtin ZUT module.
  FUNC prepare() Builtin @public
    DeclStore.wantPName("MZUTModule__CEvent__X", "FnewClickEvent")
    DeclStore.wantPName("MZUTModule__CEvent__X", "FnewKeyDownEvent")
    DeclStore.wantPName("MZUTModule__CEvent__X", "FnewKeyUpEvent")
    DeclStore.wantPName("MZUTModule__CEvent__X", "FnewKeyEvent")
    DeclStore.wantPName("MZUTModule__CEvent__X", "FnewMouseMoveEvent")
    DeclStore.wantPName("MZUTModule__CEvent__X", "FnewMouseOverEvent")
    DeclStore.wantPName("MZUTModule__CEvent__X", "FnewMouseOutEvent")
    DeclStore.wantPName("MZUTModule__CEvent__X", "FnewValueChangeEvent")
    DeclStore.wantPName("MZUTModule", "CContext")
    DeclStore.wantPName("MZUTModule__CContext", "MNEW__1")
    DeclStore.wantPName("MZUTModule__CElement", "MNEW")
    DeclStore.wantPName("MZUTModule__CEventConfig", "MNEW")
    DeclStore.wantPName("MZUTModule__CEventConfig", "Mlisten")
    DeclStore.wantPName("MZUTModule", "FonLoad")

    Builtin b = NEW()
    b.moduleName = "ZUTModule"
    b.fileName = "ZUTModule.zu"
    b.setup = setup
    RETURN b
  }

  # Invoked when the ZUT module is used, after it was processed first time.
  PROC setup(Builtin builtin, SContext ctx) @public
    IF moduleDecl == NIL
      # Add this module to the list of predefined symbols.
      moduleDecl = Builtin.addLibModule("ZUT", builtin)
    }
  }

}
