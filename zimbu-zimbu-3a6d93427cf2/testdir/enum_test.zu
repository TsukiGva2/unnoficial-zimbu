# Test file for ENUM
#
# Copyright 2014-2016 Bram Moolenaar  All Rights Reserved.
# Licensed under the Apache License, Version 2.0.  See the LICENSE file or
# obtain a copy at: http://www.apache.org/licenses/LICENSE-2.0
#

IMPORT Util.zu

ENUM Color
  red
  green
  blue
  white
  black
}

FUNC test_enum_one() status
  Color c
  TEST.equal(Color.red, c)
  TEST.equal("red", c.ToString())

  TEST.false(Color.red.value() > Color.green.value())
  TEST.true(Color.red.value() < Color.green.value())

  TEST.equal("enum Color", Color.Type().ToString())
  # IO.print("Color value type: \(c.Type())")

  c = Color.FromString("green")
  TEST.equal(Color.green, c)

  RETURN OK
}

FUNC test_enum_two() status
  ENUM Color2
    blue
    red
    black
  }

  Color2 e = Color2.red
  int i = e == Color2.blue ? 99 : "yes" == "bar" ? 55 : 48
  TEST.equal(48, i)

  RETURN OK
}

ENUM MoreColor EXTENDS Color
  yellow
  purple
}

ENUM AnotherColor EXTENDS Color
  pink
  sky
}

ENUM DeepColor EXTENDS MoreColor
  orange
}

FUNC test_enum_extends() status
  MoreColor mc = MoreColor.purple
  TEST.equal("purple", mc.ToString())
  mc = Color.green
  TEST.equal("green", mc.ToString())

  AnotherColor ac = AnotherColor.sky
  TEST.equal("sky", ac.ToString())
  ac = AnotherColor.black
  TEST.equal("black", ac.ToString())

  DeepColor dc = DeepColor.orange
  TEST.equal("orange", dc.ToString())
  dc = MoreColor.yellow
  TEST.equal("yellow", dc.ToString())
  dc = Color.blue
  TEST.equal("blue", dc.ToString())

  dict<string, Color> d = ["red": Color.red,
                           "yellow": MoreColor.yellow,
                           "pink": AnotherColor.pink,
                           "orange": DeepColor.orange,
                          ]
  TEST.equal(DeepColor.orange, d["orange"])
  TEST.equal(AnotherColor.pink, d["pink"])
  TEST.equal(Color.red, d["red"])
  TEST.equal(MoreColor.yellow, d["yellow"])

  RETURN OK
}
