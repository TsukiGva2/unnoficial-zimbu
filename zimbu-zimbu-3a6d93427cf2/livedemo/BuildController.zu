#
# Zimbu live demo: build controller
#
# Copyright 2015 Bram Moolenaar  All Rights Reserved.
# Licensed under the Apache License, Version 2.0.  See the LICENSE file or
# obtain a copy at: http://www.apache.org/licenses/LICENSE-2.0
#

# Get the protocol buffer definition for BuildRequest and BuildResult.
IMPORT.PROTO buildzimbu.proto

IMPORT $PLUGIN/proto/Message.zu  # defines Message

CLASS BuildController

  SHARED
    # state variables
    bool busy     # TRUE when request was sent and no response received yet.
    bool doBuild  # TRUE when key typed, need to send build request.
    string lastProgram
  }

  # Handle a key typed in the text area: build the code, now or later.
  FUNC $keyHandler(ZUT.Event e) bool
    IF !busy
      $sendRequest()   # not busy, send build request now
    ELSE
      doBuild = TRUE  # busy, build again after current build is done
    }

    # Do not bubble up.
    RETURN FALSE
  }

  # Send the text of the textarea to the server.
  PROC $sendRequest()
    busy = TRUE

    ZUT.Element textarea = ZUT.getElementById("program")
    string program = textarea.getValue()
    IF program == lastProgram
      busy = FALSE
      RETURN
    }
    lastProgram = program

    # Create a new BuildRequest message and set the code string.
    Livedemo.BuildRequest request = NEW()
    request.setCode(program)
    doBuild = FALSE

    ZUT.Element compilearea = ZUT.getElementById("compilerOut")
    compilearea.setText("compiling...")
    compilearea.removeClass("failed")

    # Invoke the method on the server.
    Livedemo.BuildService.callBuildAndRun(request, $handleResponse)
  }

  # Handle the response from a build request.
  PROC $handleResponse(RPC.Control control, Message message)
    ZUT.Element compilearea = ZUT.getElementById("compilerOut")
    IF message == NIL
      # RPC failed
      compilearea.setText("request failed")
      compilearea.addClass("failed")
    ELSE
      Livedemo.BuildResult response = message

      # Display the compilation output and the program output.
      compilearea.setText(response.getCompilerMessages())
      ZUT.Element outputarea = ZUT.getElementById("programOut")
      outputarea.setText(response.getRunOutput())
    }

    # If a key was typed in the mean time send a request again.
    IF doBuild
      $sendRequest()
    ELSE
      busy = FALSE
    }
  }

  SHARED

    FUNC Init() status
      GENERATE_IF Z.lang == "JS"
        ZUT.callOnLoad(onLoad)
      }
      RETURN OK
    }

    # Build the program when the page has been loaded.
    PROC onLoad()
      BuildController c = NEW()
      c.sendRequest()
    }
  }
}
