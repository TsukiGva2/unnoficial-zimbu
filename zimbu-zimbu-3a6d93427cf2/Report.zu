#
# The Zimbu compiler written in Zimbu
#
# Error module: gets the position from the context.
#
# Copyright 2015 Bram Moolenaar  All Rights Reserved.
# Licensed under the Apache License, Version 2.0.  See the LICENSE file or
# obtain a copy at: http://www.apache.org/licenses/LICENSE-2.0
#

IMPORT.PROTO parser/zui.proto

IMPORT ZimbuFile.zu

MODULE Report @items=public                   # TODO: restrict visibility

  # Report error |msg|.
  PROC error(string msg)
    report(LOG.Level.error, msg)
  }

  # Report an internal error.
  PROC internal(string msg)
    report(LOG.Level.error, msg, TRUE)
  }

  # Report |msg|.
  PROC info(string msg)
    report(LOG.Level.info, msg)
  }

  # Report an internal error.
  PROC internal(string msg, Zui.Position pos)
    report(LOG.Level.error, msg, pos, TRUE)
  }

  # Report an error.
  PROC report(LOG.Level level, string msg, bool isInternal = FALSE)
    Zui.Position pos

    # First try to find an expression, it's more accurate than a statement.
    Zui.Expression expr = CTX.get(Zui.Expression.Type())
    IF expr != NIL
      pos = expr.getPos()
    }
    
    IF pos == NIL
      # Use the current statement.
      Zui.Statement stmt = CTX.get(Zui.Statement.Type())
      IF stmt != NIL
        pos = stmt.getPos()
      }
    }
    report(level, msg, pos, isInternal)
  }

  PROC report(LOG.Level level, string msg, Zui.Position pos, bool isInternal)
    Z.Pos zpos
    IF pos != NIL
      string fname = pos.getFilename()
      IF fname == NIL
        ZimbuFile zf = CTX.get(ZimbuFile.Type())
        fname = zf == NIL ? "unknown" : zf.filename
      }
      zpos = NEW(fname, pos.getLine(), pos.getColumn())
    }

    LOG.log(level, msg, zpos, isInternal ? :internal : 0)
  }

}
